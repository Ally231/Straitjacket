using System;

namespace Errors
{
    internal class Program
    {
        /*
         * Задания:
         * Придумать тест кейсы (пока что расписываем на словах) к условию задачи которое распологается перед функцией  GetDataType
         * Далее пишем метод который будет выполнять тестирование (пока что все должно выглядить просто шаблонно), т.е. просто метод, его как то назвать, над ним комментарии где расписаны тест кейсы
         * Делаем описаную задачу sdsdм, учитывая тест кейсы
         * В конце всего проводим рефакторинг
         */
        public static void Main(string[] args)
        {
            var inputStr = Console.ReadLine();
            var outputStr = GetOutputStr(inputStr);

            Console.WriteLine($"Вы ввели: {inputStr}");
            Console.WriteLine($"{outputStr}");
        }


        //  Условие задачи: На консоль вводятся различные данные(изначально консоль все преобразует в строку), программа должна уметь парсить вводимые данные в их тип без выкидывания ошибок
        // и говорить пользователю что он ввел, т.е. например я ввожу 4, в ответ ожидаю увидеть что я ввела int.
        // Используй в задаче конструкцию try/catch, метод tryParce и Enum (оптиционально) и все что знаешь

        //Для выполнения задания пригодятся знания о преобразовании типах, их видах и возможных ошибках 
        public static string GetOutputStr(string inputStr)
        {
            try
            {
                if (int.TryParse(inputStr, out var intNumber))
                {
                    // TryParse отдает булевое значение вместе с итогом преобразования
                    // Если мы зашли в эту конструкцию значит нам удалось преобразовать строку в int 
                    // "out var intNumber" возвращаемое значение из TryParse, здесь мы получим наше число 


                    // тут мы передаем тип из Enum в функцию, функция в зависимости от нужного типа отдает нам нужную строку
                    // здесь можно сразу отдавать строку вместо использования Enum и GetDateType
                    return "Ваш тип данных соответствует Int";
                }
            }
            catch (Exception e)
            {
                //Тут опиши как должна обрабатываться ошибка
                Console.WriteLine(e); //вывод ошибки на консоль 
                throw; //выкидывание ошибки, убери если не хочешь чтобы программа выбрасывала ошибку
            }

            return
                null; // если функция что то возвращает всегда должен быть return который выполнится в любом случае, тут можно заменить на строку и отдавать что то
        }


         //Шаблон для тестов :
         // легкий пример смотри в ActualizationKepOptionsExtensionTests (сайн)

        // тут описываем  тест кейсы  пока словесно(в закомментированном виде), если можешь в виде готовых тестКейсов пиши так 
        // по хорошему тестируемую функцию надо вынести в отдельный файл
        public void GetOutputStrTests()
        {
            //Arrange
            //Act
            //Assert
        }
    }
}